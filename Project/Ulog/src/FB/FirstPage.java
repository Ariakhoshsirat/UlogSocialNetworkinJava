/*
 * FirstPage.java
 *
 * Created on __DATE__, __TIME__
 */

package FB;

import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;

import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.filechooser.FileNameExtensionFilter;

import org.hibernate.Transaction;

/**
 *
 * @author  __USER__
 */
public class FirstPage extends javax.swing.JFrame {
	public static int id;

	/** Creates new form FirstPage */
	public FirstPage() {

		initComponents();
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	//GEN-BEGIN:initComponents
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		jLabel4 = new javax.swing.JLabel();
		jLabel5 = new javax.swing.JLabel();
		jLabel1 = new javax.swing.JLabel();
		jTextField1 = new javax.swing.JTextField();
		jButton1 = new javax.swing.JButton();
		jButton2 = new javax.swing.JButton();
		jLabel2 = new javax.swing.JLabel();
		jPasswordField1 = new javax.swing.JPasswordField();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setBackground(new java.awt.Color(204, 255, 51));

		jLabel4.setFont(new java.awt.Font("Arial", 0, 18));
		jLabel4.setText("Username :");

		jLabel5.setFont(new java.awt.Font("Arial", 0, 18));
		jLabel5.setText("Password :");

		jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Images\\llogo.jpg")); // NOI18N

		jTextField1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jTextField1ActionPerformed(evt);
			}
		});

		jButton1.setText("Sign in");
		jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				try {
					jButton1MouseReleased(evt);
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
		});

		jButton2.setText("Sign Up");
		jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				jButton2MouseReleased(evt);
			}
		});

		jLabel2.setFont(new java.awt.Font("Arial", 1, 14));
		jLabel2.setForeground(new java.awt.Color(255, 0, 0));

		jPasswordField1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jPasswordField1ActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout
				.setHorizontalGroup(layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								layout
										.createSequentialGroup()
										.addContainerGap()
										.addComponent(
												jLabel1,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												632,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(8, 8, 8)
										.addGroup(
												layout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
														.addGroup(
																layout
																		.createSequentialGroup()
																		.addGroup(
																				layout
																						.createParallelGroup(
																								javax.swing.GroupLayout.Alignment.LEADING)
																						.addGroup(
																								layout
																										.createSequentialGroup()
																										.addGap(
																												18,
																												18,
																												18)
																										.addGroup(
																												layout
																														.createParallelGroup(
																																javax.swing.GroupLayout.Alignment.LEADING)
																														.addComponent(
																																jLabel5,
																																javax.swing.GroupLayout.PREFERRED_SIZE,
																																92,
																																javax.swing.GroupLayout.PREFERRED_SIZE)
																														.addComponent(
																																jLabel4,
																																javax.swing.GroupLayout.DEFAULT_SIZE,
																																93,
																																Short.MAX_VALUE))
																										.addPreferredGap(
																												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																										.addGroup(
																												layout
																														.createParallelGroup(
																																javax.swing.GroupLayout.Alignment.LEADING)
																														.addComponent(
																																jTextField1,
																																javax.swing.GroupLayout.DEFAULT_SIZE,
																																180,
																																Short.MAX_VALUE)
																														.addComponent(
																																jButton1,
																																javax.swing.GroupLayout.DEFAULT_SIZE,
																																180,
																																Short.MAX_VALUE)
																														.addComponent(
																																jPasswordField1,
																																javax.swing.GroupLayout.DEFAULT_SIZE,
																																180,
																																Short.MAX_VALUE)))
																						.addGroup(
																								layout
																										.createSequentialGroup()
																										.addGap(
																												36,
																												36,
																												36)
																										.addComponent(
																												jLabel2,
																												javax.swing.GroupLayout.PREFERRED_SIZE,
																												248,
																												javax.swing.GroupLayout.PREFERRED_SIZE)))
																		.addContainerGap())
														.addGroup(
																javax.swing.GroupLayout.Alignment.TRAILING,
																layout
																		.createSequentialGroup()
																		.addGap(
																				64,
																				64,
																				64)
																		.addComponent(
																				jButton2,
																				javax.swing.GroupLayout.PREFERRED_SIZE,
																				219,
																				javax.swing.GroupLayout.PREFERRED_SIZE)
																		.addGap(
																				25,
																				25,
																				25)))));
		layout
				.setVerticalGroup(layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								layout
										.createSequentialGroup()
										.addGap(23, 23, 23)
										.addComponent(
												jLabel2,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												47,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addGroup(
												layout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(
																jLabel4,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																Short.MAX_VALUE)
														.addComponent(
																jTextField1,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE))
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addGroup(
												layout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(
																jLabel5,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																Short.MAX_VALUE)
														.addComponent(
																jPasswordField1,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE))
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(jButton1)
										.addGap(34, 34, 34)
										.addComponent(
												jButton2,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												85,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(183, 183, 183))
						.addGroup(
								layout
										.createSequentialGroup()
										.addContainerGap()
										.addComponent(
												jLabel1,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												438, Short.MAX_VALUE)
										.addContainerGap()));

		pack();
	}// </editor-fold>
	//GEN-END:initComponents

	private void jPasswordField1ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
	}

	private void jButton1MouseReleased(java.awt.event.MouseEvent evt)
			throws IOException {
		String UserName = jTextField1.getText();
		String Password = jPasswordField1.getText();

		if ((id = Authenticate(UserName, Password)) == 0) {
			jLabel2.setText("Wrong Username/Password");
			/*		ImageIcon a = new ImageIcon();

					JFrame f = new JFrame();
					JFileChooser chooser = new JFileChooser();
					FileNameExtensionFilter filter = new FileNameExtensionFilter(
							"JPG & GIF Images", "jpg", "gif");
					chooser.setFileFilter(filter);

					chooser.showOpenDialog(f);

					Image img = ImageIO.read(new File(chooser.getSelectedFile()
							.getPath()));
					Image b = img.getScaledInstance(300, 300, 300);
					a.setImage(b);

					jLabel1.setIcon(a); */
		} else {
			FriendsPage.current = id;
			this.setVisible(false);
			ProfilePage a = new ProfilePage();

			//	a.jButton1
			ProfileDAO dao = new ProfileDAO();
			Transaction dx = dao.getSession().beginTransaction();
			Profile user = dao.findById(id);

			int i;
			Profile c;
			List<Profile> list = new ArrayList();
			a.getjButton13().setVisible(false);
			a.getjButton14().setVisible(false);
			a.getjButton15().setVisible(false);
			if (user.getFriends().size() != 0) {
				Profile userfr = dao.findById(user.getFriends().get(0)
						.getFriendId());
				for (i = userfr.getFriends().size() - 1; i >= 0; i--) {
					c = dao.findById(userfr.getFriends().get(i).getFriendId());
					list.add(c);
				}
				int j;
				int y;
				//for(j=0;j<foundf.size();j++)
				for (i = 0; i < user.getFriends().size(); i++) {
					if ((j = list.indexOf(dao.findById(user.getFriends().get(i)
							.getFriendId()))) != -1) {

						list.remove(j);
					}
					if ((y = list.indexOf(user)) != -1)
						list.remove(y);
				}

				dx.commit();
				dao.getSession().close();
				ShowPeople(list, a, 0);
			}
			
			a.getjLabel2().setText(user.getFirstName());
			a.getjLabel3().setText(user.getLastName());
			
			ShowPosts(a, id, 0);

			a.setVisible(true);

		}
	}

	static void ShowPeople(List<Profile> foundf, ProfilePage fp, Integer frid)
			throws IOException {

		int i;
		int j;
		for (i = foundf.size() - 1 - frid, j = 0; i >= 0 && j < 3; i--, j++) {
			if (j == 0) {
				Profile c = foundf.get(i);//dao.findById(a.getFriends().get(i).getFriendId());
				fp.getjLabel26().setText(
						c.getFirstName() + " " + c.getLastName());
				fp.getjLabel25().setText(c.getId().toString());
				ImageIcon ia = new ImageIcon();
				Image img = ImageIO.read(new File(c.getPicture()));
				Image ib = img.getScaledInstance(50, 50, 50);
				ia.setImage(ib);
				fp.getjButton13().setVisible(true);
				fp.getjLabel25().setIcon(ia);

			}
			if (j == 1) {
				Profile c = foundf.get(i);// dao.findById(a.getFriends().get(i).getFriendId());
				fp.getjLabel27().setText(
						c.getFirstName() + " " + c.getLastName());
				fp.getjLabel29().setText(c.getId().toString());
				ImageIcon ia = new ImageIcon();
				Image img = ImageIO.read(new File(c.getPicture()));
				Image ib = img.getScaledInstance(50, 50, 50);
				ia.setImage(ib);
				fp.getjLabel29().setIcon(ia);
				fp.getjButton14().setVisible(true);
			}
			if (j == 2) {
				Profile c = foundf.get(i);//dao.findById(a.getFriends().get(i).getFriendId());
				fp.getjLabel28().setText(
						c.getFirstName() + " " + c.getLastName());
				fp.getjLabel30().setText(c.getId().toString());
				ImageIcon ia = new ImageIcon();
				Image img = ImageIO.read(new File(c.getPicture()));
				Image ib = img.getScaledInstance(50, 50, 50);
				ia.setImage(ib);
				fp.getjLabel30().setIcon(ia);
				fp.getjButton15().setVisible(true);
			}

		}

	}

	/*
	 static void ShowPosts(ProfilePage a, Profile user, Integer id)
	 throws IOException {

	 ProfileDAO dao = new ProfileDAO();
	 Transaction dx = dao.getSession().beginTransaction();
	 Profile b = dao.findById(id);

	 int i;
	 int j;
	 for (i = b.getPosts().size() - 1, j = 0; i >= 0 && j < 5; i--, j++) {
	 if (j == 0) {
	 a.getjLabel4().setText(b.getPosts().get(i).getText());
	 DateFormat dateFormat = new SimpleDateFormat("yyyy/MMM/dd");
	 a.getjLabel9().setText(
	 dateFormat.format(b.getPosts().get(i).getDate()));
	 }
	 if (j == 1) {
	 a.getjLabel6().setText(b.getPosts().get(i).getText());
	 DateFormat dateFormat = new SimpleDateFormat("yyyy/MMM/dd");
	 a.getjLabel10().setText(
	 dateFormat.format(b.getPosts().get(i).getDate()));
	 }
	 if (j == 2) {
	 a.getjLabel7().setText(b.getPosts().get(i).getText());
	 DateFormat dateFormat = new SimpleDateFormat("yyyy/MMM/dd");
	 a.getjLabel11().setText(
	 dateFormat.format(b.getPosts().get(i).getDate()));
	 }
	 if (j == 3) {
	 a.getjLabel8().setText(b.getPosts().get(i).getText());
	 DateFormat dateFormat = new SimpleDateFormat("yyyy/MMM/dd");
	 a.getjLabel12().setText(
	 dateFormat.format(b.getPosts().get(i).getDate()));
	 }
	 if (j == 4) {
	 a.getjLabel13().setText(b.getPosts().get(i).getText());
	 DateFormat dateFormat = new SimpleDateFormat("yyyy/MMM/dd");
	 a.getjLabel14().setText(
	 dateFormat.format(b.getPosts().get(i).getDate()));
	 }

	

	 }
	 ImageIcon ia = new ImageIcon();

	
	 Image img = ImageIO.read(new File(b.getPicture()));
	 Image ib = img.getScaledInstance(150, 150, 150);
	 ia.setImage(ib);

	 a.getjLabel1().setIcon(ia);
	 dx.commit();
	 dao.getSession().close();

	 }
	 */static void ShowPosts(ProfilePage a, Integer id, int from)
			throws IOException {

		/*	  ProfileDAO dao = new ProfileDAO();
			  Transaction dx = dao.getSession().beginTransaction();*/
		ProfileDAO dao = new ProfileDAO();
		Transaction dx = dao.getSession().beginTransaction();
		Profile b = dao.findById(id);

		int i;
		int j;

		for (i = (b.getPosts().size() - 1) - from, j = 0; i >= 0 && j < 5; i--, j++) {
			if (j == 0) {

				Profile poster = dao
						.findById(b.getPosts().get(i).getPosterid());
				ImageIcon ia = new ImageIcon();

				Image img = ImageIO.read(new File(poster.getPicture()));
				Image ib = img.getScaledInstance(50, 50, 50);
				ia.setImage(ib);

				a.getjLabel15().setIcon(ia);
				a.getjLabel16().setText(poster.getFirstName() + ": ");
				a.getjLabel4().setText(

				b.getPosts().get(i).getText());
				DateFormat dateFormat = new SimpleDateFormat("yyyy/MMM/dd");
				a.getjLabel9().setText(
						dateFormat.format(b.getPosts().get(i).getDate()));
			}
			if (j == 1) {
				Profile poster = dao
						.findById(b.getPosts().get(i).getPosterid());
				ImageIcon ia = new ImageIcon();

				Image img = ImageIO.read(new File(poster.getPicture()));
				Image ib = img.getScaledInstance(50, 50, 50);
				ia.setImage(ib);

				a.getjLabel17().setIcon(ia);
				a.getjLabel18().setText(poster.getFirstName() + ": ");
				a.getjLabel6().setText(b.getPosts().get(i).getText());
				DateFormat dateFormat = new SimpleDateFormat("yyyy/MMM/dd");
				a.getjLabel10().setText(
						dateFormat.format(b.getPosts().get(i).getDate()));
			}
			if (j == 2) {
				Profile poster = dao
						.findById(b.getPosts().get(i).getPosterid());
				ImageIcon ia = new ImageIcon();

				Image img = ImageIO.read(new File(poster.getPicture()));
				Image ib = img.getScaledInstance(50, 50, 50);
				ia.setImage(ib);

				a.getjLabel19().setIcon(ia);
				a.getjLabel20().setText(poster.getFirstName() + ": ");
				a.getjLabel7().setText(b.getPosts().get(i).getText());
				DateFormat dateFormat = new SimpleDateFormat("yyyy/MMM/dd");
				a.getjLabel11().setText(
						dateFormat.format(b.getPosts().get(i).getDate()));
			}
			if (j == 3) {
				Profile poster = dao
						.findById(b.getPosts().get(i).getPosterid());
				ImageIcon ia = new ImageIcon();

				Image img = ImageIO.read(new File(poster.getPicture()));
				Image ib = img.getScaledInstance(50, 50, 50);
				ia.setImage(ib);

				a.getjLabel21().setIcon(ia);
				a.getjLabel22().setText(poster.getFirstName() + ": ");
				a.getjLabel8().setText(b.getPosts().get(i).getText());
				DateFormat dateFormat = new SimpleDateFormat("yyyy/MMM/dd");
				a.getjLabel12().setText(
						dateFormat.format(b.getPosts().get(i).getDate()));
			}
			if (j == 4) {
				Profile poster = dao
						.findById(b.getPosts().get(i).getPosterid());
				ImageIcon ia = new ImageIcon();

				Image img = ImageIO.read(new File(poster.getPicture()));
				Image ib = img.getScaledInstance(50, 50, 50);
				ia.setImage(ib);

				a.getjLabel23().setIcon(ia);
				a.getjLabel24().setText(poster.getFirstName() + ": ");
				a.getjLabel13().setText(b.getPosts().get(i).getText());
				DateFormat dateFormat = new SimpleDateFormat("yyyy/MMM/dd");
				a.getjLabel14().setText(
						dateFormat.format(b.getPosts().get(i).getDate()));
			}

		}
		ImageIcon ia = new ImageIcon();

		Image img = ImageIO.read(new File(b.getPicture()));
		Image ib = img.getScaledInstance(150, 150, 150);
		ia.setImage(ib);

		a.getjLabel1().setIcon(ia);
		dx.commit();
		dao.getSession().close();

	}

	static Integer Authenticate(String username, String password) {

		ProfileDAO dao = new ProfileDAO();
		Transaction dx = dao.getSession().beginTransaction();
		List<Profile> a = dao.findAll();
		int i;
		for (i = 0; i < a.size(); i++) {
			if (a.get(i).getUsername().equals(username)) {
				if (a.get(i).getPassword().equals(password)) {
					dx.commit();
					dao.getSession().close();
					return i + 1;

				}
			}

		}
		dx.commit();
		dao.getSession().close();
		return 0;

	}

	private void jButton2MouseReleased(java.awt.event.MouseEvent evt) {
		this.setVisible(false);
		UI a = new UI();
		a.setVisible(true);

	}

	private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
	}

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new FirstPage().setVisible(true);
			}
		});
	}

	//GEN-BEGIN:variables
	// Variables declaration - do not modify
	private javax.swing.JButton jButton1;
	private javax.swing.JButton jButton2;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JPasswordField jPasswordField1;
	private javax.swing.JTextField jTextField1;
	// End of variables declaration//GEN-END:variables

}